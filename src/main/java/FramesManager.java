import javax.xml.crypto.Data;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;

public class FramesManager {

    private static final int max_size = 100;
    ArrayList<Frame> framesList;
    private ArrayList<String> binFrameList;

    public void createFramesList(byte[] data, int windowSize){
        framesList = new ArrayList<>();

        byte type;
        int num;
        // split les données en morceaux de bytes selon la taille maximale
        byte[][] data_chunks = DataManipulation.splitBytes(data, max_size);

        for (int i = 0; i < data_chunks.length; i++) {
            type = 'I';
            num = i % windowSize;
            framesList.add(new Frame(type, num, data_chunks[i]));
            binFrameList = new ArrayList<>();

            // add flag and convert frames to binary
            for (Frame f : framesList) {
                binFrameList.add(f.getFlag() + DataManipulation.bitStuffing(f.toBin()) + f.getFlag());
            }
        }
    }

    public ArrayList<String> getBinFrameList() {
        return binFrameList;
    }

    public String getFrameToSend(Frame fm){
        return fm.getFlag() + fm.toBin() + fm.getFlag();
    }

    public Frame getFrameConnectionConfirmation(int frame_num) {

        // go-back-N request
        if(frame_num == 0){
            //send RR0 -> is waiting for the first frame
            return new Frame('A',0);

        } else { //not supported
            //send an end of communication
            return new Frame('F', 0);
        }
    }

    public Frame getFrameByType (byte type, int frame_num) {

        switch (type) {
            case 'I': // information
                //ack is the number of the frame + 1
                return getFrameAck((frame_num+1) % Sender.WINDOW_SIZE);
            case 'C': // Connection request
                return getFrameConnectionConfirmation(frame_num);
            case 'F': // end of communication
                System.out.println("RECEIVER confirm close connection");
                return new Frame('F', 0);
//            case 'P': //  P bit
//                //TODO
//                break;
            default:
                return getREJ(frame_num);   // TODO changer??
        }
    }



    public String frameExtract (String input) {
        input = input.substring(8, input.length() - 8);    // without flags
        return DataManipulation.bitUnStuffing(input);    // remove bit stuffing
    }

    public Frame getFrameAck(int frame_num) {

        //send aknowledgement
        return new Frame('A', frame_num); //window size
    }

    public Frame getREJ(int num) {
        return new Frame('R', num); // TODO: bien retourner le num du frame avec erreur?
    }

    /**
     * Vérifie si le frame reçue n'est pas erroné
     * @param binFrame reçu sous format binaire (string)
     * @return : boolean
     */
    public boolean containsError(String binFrame) {
        boolean isWrong = false;
        if (!Checksum.xor_div(binFrame).equals("0")) {
            isWrong = true;
        }
        return isWrong;
    }

    //Test
    public static void main(String args[]){
        String testBin

        FramesManager fmTest = new FramesManager();

//        fmTest.getFrame(testBin);


    }


}
