import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;

public class FramesManager {

    private static final int data_size = 1000;  // 1000 byte = 1Kb  // TODO data frame size ou frame size au complet?
    ArrayList<Frame> framesList;
    public ArrayList<String> binFrameList;

    public void createFramesList(byte[] data){
        framesList = new ArrayList<Frame>() {
        };

        byte type;
        int num;

        int n = (int) Math.ceil((double) data.length / data_size); // nb de frame TODO: revoir..
        byte[] data_chunk;
        int src_pos = 0;

        for (int i = 0; i < n; i++) {
            type = 'I'; // test
            num = i % 8;  //2^3 = 8 combinaisons
            // TODO crc = getcrc()...

            data_chunk = new byte[data_size];
            if (data.length - (i * data_size) < data_size) // last data chunk
                System.arraycopy(data, src_pos, data_chunk, 0, data.length - (i * data_size));
            else
                System.arraycopy(data, src_pos, data_chunk, 0, data_size);

            framesList.add(new Frame(type, num, data_chunk));
            src_pos += data_size;

            binFrameList = new ArrayList<>();

            //add flag and convert frames to binary
            for (Frame f : framesList) {
                binFrameList.add(f.getFlag() + DataManipulation.bitStuffing(f.toBin()) + f.getFlag());
            }
        }
    }

    public ArrayList<String> getBinFrameList() {
        return binFrameList;
    }

    /**
     * Return a Frame when get a binary String that represent a frame
     * @param binFrame
     * @return
     */
    public Frame getFrame(String binFrame){


        return null;
    }

    //Test
    public static void main(String args[]){
        String binFrame

        binFrame = DataManipulation.bitUnStuffing(binFrame);

        char[] frame = binFrame.toCharArray();
        int i;
        for(i = 0 ; i <= frame.length; i++){
            String c = "";
            while(c.length() <= 8) {
                c += frame[i];
                i++;
            }

            char ch = (char)Integer.parseInt(c, 2);
            System.out.print(ch);
        }
    }


}
